<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WPF"
        xmlns:CeaiModel="clr-namespace:CeaiModel;assembly=CeaiModel" x:Class="WPF.MainWindow"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="800" Loaded="Window_Loaded">
    <Window.Resources>
        <CollectionViewSource x:Key="customerViewSource" d:DesignSource="{d:DesignInstance {x:Type CeaiModel:Customer}, CreateList=True}"/>
        <CollectionViewSource x:Key="inventoryViewSource" d:DesignSource="{d:DesignInstance {x:Type CeaiModel:Inventory}, CreateList=True}"/>
        <CollectionViewSource x:Key="customerOrdersViewSource" Source="{Binding Orders, Source={StaticResource customerViewSource}}"/>
        <ControlTemplate x:Key="validationTemplate">
            <DockPanel>
                <TextBlock Foreground="Red" FontSize="20">!</TextBlock>
                <AdornedElementPlaceholder/>
            </DockPanel>
        </ControlTemplate>
        <Style x:Key="textBoxInError" TargetType="{x:Type TextBox}">
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)/ErrorContent}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>


    <Grid Background="#FFE5E5E5" Margin="0,0,0,1">
        <TabControl x:Name="tbCeainarie" HorizontalAlignment="Left" Height="377" VerticalAlignment="Top" Width="440" Margin="156,32,0,0" Grid.ColumnSpan="2">
            <TabItem Header="Customers">
                <Grid x:Name="btnDelete" Background="#FFE5E5E5" DataContext="{StaticResource customerViewSource}" Margin="0,0,-210.6,0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="77*"/>
                        <ColumnDefinition Width="17*"/>
                        <ColumnDefinition Width="11*"/>
                        <ColumnDefinition Width="55*"/>
                        <ColumnDefinition Width="765*"/>
                    </Grid.ColumnDefinitions>
                    <DataGrid x:Name="customerDataGrid" AutoGenerateColumns="False" EnableRowVirtualization="True" ItemsSource="{Binding}" Margin="27,10,213,189" RowDetailsVisibilityMode="VisibleWhenSelected" Grid.ColumnSpan="5">
                        <DataGrid.Columns>
                            <DataGridTextColumn x:Name="customerIdColumn" Binding="{Binding CustomerId}" Header="Customer Id" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="firstNameColumn" Binding="{Binding FirstName}" Header="First Name" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="lastNameColumn" Binding="{Binding LastName}" Header="Last Name" Width="SizeToHeader"/>
                        </DataGrid.Columns>
                    </DataGrid>
                    <Grid x:Name="grid1" HorizontalAlignment="Left" Margin="28,175,0,0" VerticalAlignment="Top" Grid.Column="3" Grid.ColumnSpan="2">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Label Content="Customer Id:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="0" VerticalAlignment="Center"/>
                        <TextBox x:Name="customerIdTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="0" Text="{Binding CustomerId, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120" IsEnabled="False"/>
                        <Label Content="First Name:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="1" VerticalAlignment="Center"/>
                        <TextBox x:Name="firstNameTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="1" Text="{Binding FirstName, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120" Style="{StaticResource textBoxInError}"/>
                        <Label Content="Last Name:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="2" VerticalAlignment="Center"/>
                        <TextBox x:Name="lastNameTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="2" Text="{Binding LastName, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120" Validation.ErrorTemplate="{StaticResource validationTemplate}" Style="{StaticResource textBoxInError}"/>
                    </Grid>
                    <Button x:Name="btnPrev" Content="Previous" HorizontalAlignment="Left" Margin="28,289,0,0" VerticalAlignment="Top" Width="75" Grid.Column="3" Grid.ColumnSpan="2" Click="btnPrevious_Click"/>
                    <Button x:Name="btnNext" Content="Next" HorizontalAlignment="Left" Margin="125,289,0,0" VerticalAlignment="Top" Width="75" Grid.Column="4" Click="btnNext_Click"/>
                </Grid>
            </TabItem>
            <TabItem Header="Inventory">
                <Grid Background="#FFE5E5E5" Margin="0,-4,0,4">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="10*"/>
                        <ColumnDefinition Width="15*"/>
                        <ColumnDefinition Width="127*"/>
                        <ColumnDefinition Width="562*"/>
                    </Grid.ColumnDefinitions>
                    <DataGrid x:Name="inventoryDataGrid" AutoGenerateColumns="False" EnableRowVirtualization="True" ItemsSource="{Binding Source={StaticResource inventoryViewSource}}" Margin="10,21,56,160" RowDetailsVisibilityMode="VisibleWhenSelected" RenderTransformOrigin="-0.354,0.028" Grid.Column="2" Grid.ColumnSpan="2">
                        <DataGrid.Columns>
                            <DataGridTextColumn x:Name="teeIdColumn" Binding="{Binding TeeId}" Header="TeeId" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="flavorColumn" Binding="{Binding Flavor}" Header="Flavor" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="qualityColumn" Binding="{Binding Quality}" Header="Quality" Width="SizeToHeader"/>
                        </DataGrid.Columns>
                    </DataGrid>

                    <Grid x:Name="grid2" DataContext="{StaticResource inventoryViewSource}" HorizontalAlignment="Left" Margin="14,214,0,0" VerticalAlignment="Top"
					Width="213" Height="96" Grid.Column="3">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Label Content="Tee Id:" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        <TextBox x:Name="teeIdTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="0.4,0,0,4" Grid.Row="0" Text="{Binding TeeId, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120" IsEnabled="False"/>
                        <Label Content="Flavor:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="1" VerticalAlignment="Center"/>
                        <TextBox x:Name="flavorTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="1" Text="{Binding Flavor, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120"/>
                        <Label Content="Quality:" HorizontalAlignment="Center" Grid.Row="2" VerticalAlignment="Center"/>
                        <TextBox x:Name="qualityTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="2" Text="{Binding Quality, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120"/>

                    </Grid>

                    <Button x:Name="btnPrev1" Content="Previous" HorizontalAlignment="Left" Margin="14,315,0,0" VerticalAlignment="Top" Width="75" Grid.Column="3" Click="btnPrevious1_Click"/>
                    <Button x:Name="btnNext1" Content="Next" HorizontalAlignment="Center" Margin="0,315,0,0" VerticalAlignment="Top" Width="75" Grid.Column="3" Click="btnNext1_Click"/>

                </Grid>
            </TabItem>
            <TabItem Header="Orders">
                <Grid Background="#FFE5E5E5" Margin="0,-117,0.4,-144" DataContext="{StaticResource customerOrdersViewSource}">
                    <ComboBox x:Name="cmbCustomers" HorizontalAlignment="Left" Margin="58,76,0,0" VerticalAlignment="Top" Width="120" SelectedValue="{Binding ElementName=ordersDataGrid, Path=SelectedItem.CustomerId,Mode=OneWay}">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock>
                                    <TextBlock.Text>
                                        <MultiBinding StringFormat="{}{0} {1}">
                                            <Binding Path="FirstName"/>
                                            <Binding Path="LastName"/>
                                        </MultiBinding>
                                    </TextBlock.Text>
                                </TextBlock>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                    <ComboBox x:Name="cmbInventory" HorizontalAlignment="Left" Margin="273,76,0,0" VerticalAlignment="Top" Width="120"  SelectedValue="{Binding ElementName=ordersDataGrid,Path=SelectedItem.TeeId,Mode=OneWay}">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock>
                                    <TextBlock.Text>
                                        <MultiBinding StringFormat="{}{0} - {1}">
                                            <Binding Path="Flavor"/>
                                            <Binding Path="Quality"/>
                                        </MultiBinding>
                                    </TextBlock.Text>
                                </TextBlock>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                    <TextBox x:Name="Customers" HorizontalAlignment="Left" Height="22" Margin="58,36,0,0" TextWrapping="Wrap" Text="Customers" VerticalAlignment="Top" Width="120" FontWeight="Bold"/>
                    <TextBox x:Name="Invetory" HorizontalAlignment="Left" Height="22" Margin="273,36,0,0" TextWrapping="Wrap" Text="Inventory" VerticalAlignment="Top" Width="120" FontWeight="Bold"/>

                    <DataGrid x:Name="ordersDataGrid" AutoGenerateColumns="False" EnableRowVirtualization="True" ItemsSource="{Binding}" Margin="58,140,69,175" RowDetailsVisibilityMode="VisibleWhenSelected" IsSynchronizedWithCurrentItem="True">
                        <DataGrid.Columns>
                            <DataGridTextColumn x:Name="FirstNameColumn" Binding="{Binding FirstName}" Header="First Name" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="LastNameColumn" Binding="{Binding LastName}" Header="Last Name" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="FlavorColumn" Binding="{Binding Flavor}" Header="Flavor" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="QualityColumn" Binding="{Binding Quality}" Header="Quality" Width="SizeToHeader"/>
                        </DataGrid.Columns>
                    </DataGrid>

                </Grid>
            </TabItem>
        </TabControl>
        <GroupBox x:Name="gbOperations" Button.Click="gbOperations_Click"  Header="GroupBox" HorizontalAlignment="Left" Height="137" Margin="17,80,0,0" VerticalAlignment="Top" Width="118">
            <StackPanel HorizontalAlignment="Left" Height="79" Margin="10,55,0,0" VerticalAlignment="Top" Width="122">
                <Button x:Name="btnNew1" Content="New" HorizontalAlignment="Left" VerticalAlignment="Top" Width="75" Height="18" Click="btnNew1_Click"/>
                <Button x:Name="btnDelete1" Content="Delete" HorizontalAlignment="Left" VerticalAlignment="Top" Width="75" Click="btnDelete1_Click"/>
                <Button x:Name="btnEdit1" Content="Edit" HorizontalAlignment="Left" VerticalAlignment="Top" Width="75" Click="btnEdit1_Click"/>
            </StackPanel>
        </GroupBox>

        <GroupBox x:Name="gbActions" Header="GroupBox" HorizontalAlignment="Left" Height="118" Margin="17,238,0,0" VerticalAlignment="Top" Width="118">
            <StackPanel HorizontalAlignment="Left" Height="111" Margin="10,26,0,0" VerticalAlignment="Top" Width="81">
                <Button x:Name="btnSave1" Content="Save" HorizontalAlignment="Left" VerticalAlignment="Top" Width="75" Click="btnSave1_Click">
                    <Button.Style>
                        <Style TargetType="{x:Type Button}">
                            <Setter Property="IsEnabled" Value="false" />
                            <Style.Triggers>
                                <!--Butonul Save va fi inactiv daca exista erori de validare -->
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding ElementName=lastNameTextBox, Path=(Validation.HasError)}" Value="false" />

                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="IsEnabled" Value="true" />
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                <Button x:Name="btnCancel1" Content="Cancel" HorizontalAlignment="Left" VerticalAlignment="Top" Width="75" Height="24" Click="btnCancel1_Click"/>
            </StackPanel>
        </GroupBox>

    </Grid>
</Window>
